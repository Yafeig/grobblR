% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_to_grob.R
\name{convert_to_grob}
\alias{convert_to_grob}
\title{Takes in an object, and converts it to a grob based on inputted aesthetics arguments.}
\usage{
convert_to_grob(x, height, width, aes_list = list())
}
\arguments{
\item{x}{The object which needs to be converted to a grob. Must be either: A data.frame/martrix, the file name of a .png image, a character string, a ggplot, NA (for an empty grob), or already a grob.}

\item{height}{The numeric height in mm of the desired grob.}

\item{width}{The numeric width in mm of the desired grob.}

\item{aes_list}{The list which contains elements to adjust aesthetics to the grob of x. Different type of grobs have different types of elements of this list which will affect its aesthetics. \\
For character strings or matrices of dimensions n x p, the aesthetic elements can either be a single value which will be applied to the entire matrix, or a matrix of dimension n x p, which specifies how each element of the matrix will be adjusted. Note that column names and acual matrix elements are treated differently. The below listed elements by themselves will correspond to the matrix elements. The listed elements with "colname_" in front of them will correspond to column name aesthetics. For example, "colname_bg_color" will refer to the background color of the column names. Possible aesthetic elements for character strings or matrices are:
\itemize{
\item \code{bg_alpha} - Controls the background alpha/opacity of the elements of the matrix. Values are used in grid::gpar(). Default is 1.0.
\item \code{bg_color} - Controls the background color of the elements of the matrix. If the matrix has no rownames or colnames, the default is white. If the matrix has rownames or colnames, the default is white-gray90 on every odd-even row.
\item \code{borders} - Controls the borders of the elements of the matrix. The input is a string with the possible words "top", "bottom", "left", "right" separated by commas. For example, "top, left, right" will put borders on the top, left and right side of the grid cell, but not the bottom. Default is "", or no borders.
\item \code{border_color} - Controls the color of the selected borders. Default is gray40.
\item \code{border_width} - Controls the line width density/thickness of the selected borders. Values are used in grid::gpar(). Default is 4.
\item \code{cell_sep} - Controls the amount of padding around each cell in mm. Default is 1 mm.
\item \code{color_binary_cut_off} - A cut-off value which the binary color gradient will be applied to. Default is 0.
\item \code{color_binary_high} - The color of the binary color gradient if the numeric element is greater than the color_binary_cut_off. Default is green.
\item \code{color_binary_low} - The color of the binary color gradient if the numeric element is less than the color_binary_cut_off. Default is red.
\item \code{color_binary_equal} - The color of the binary color gradient if the numeric element is equal to the color_binary_cut_off. Default is gray.
\item \code{color_gradient_binary} - A TRUE/FALSE value which signifies if a binary color gradient should be applied to the color_gradient_cols.
\item \code{color_gradient_cols} - Controls the columns which a color gradient scale will be applied to. Integer values denoting the column numbers. Can only be applied to columns with all numeric values.
\item \code{color_gradient_max} - The high color for the gradual color gradient. Default is green.
\item \code{color_gradient_mid} - The middle color for the gradual color gradient. Default is yellow.
\item \code{color_gradient_min} - The low color for the gradual color gradient. Default is red.
\item \code{col_widths} - If fitted column widths are not desired, the user can provide a vector of widths for each column of the matrix in mm.
\item \code{fnt_face} - Controls the font face of the elements of the matrix (i.e. bold, italic, etc.). Values are used in grid::gpar(). Default for table elements is normal, or 1. Default for column name elements is bold and italic, or 4.
\item \code{group_elements} - Controls whether same, adjacent elements with the row names, column names or table elements should be grouped together into one single grid. A TRUE/FALSE value, with the default being FALSE.
\item \code{row_heights} - If equal row heights are not desired, the user can provide a vector of heights for each row of the matrix in mm.
\item \code{txt_align} - Controls where the text in each grid cell will be centered around, horizontally. A numeric value between 0 and 1, with 0 being all the way to the left of the grid cell, and 1 being all the way to the right of the grid cell. Default is 0.5. Can also input 'left', 'right' or 'center', which will also make edits to \code{txt_just} to make the text completely left-justified, right-justified or centered, respectively.
\item \code{txt_angle} - Controls the text angle of the text within the matrix. A numeric value in degrees, with the default being 0.
\item \code{txt_cex} - Controls the size of the text within the matrix. Default is automatic text sizing based on the length of the elements within the matrix, the row heights and the column widths.
\item \code{txt_color} - Controls the text color of the elements of the matrix. Default for table elements and row names is black, and a gray-blue color for column names.
\item \code{txt_font} - Controls the font family of the text within the matrix. Default is sans.
\item \code{txt_just} - Controls the horizontal justification of the text in the matrix. A numeric value between 0 and 1, with 0 being left justification and 1 being right justification. Default is 0.5, or center justification. Can also input 'left', 'right' or 'center', which will also make edits to \code{txt_align} to make the text completely left-justified, right-justified or centered, respectively.
\item \code{txt_v_align} - Controls where the text in each grid cell will be centered around, vertically. A numeric value between 0 and 1, with 0 being all the way to the bottom of the grid cell, and 1 being all the way to the top of the grid cell. Default is 0.5. Can also input 'top', 'bottom' or 'center', which will also make edits to \code{txt_v_just} to make the text completely top-justified, bottom-justified or centered, respectively.
\item \code{txt_v_just} - Controls the vertical justification of the text in the matrix. A numeric value between 0 and 1, with 0 being bottom justification and 1 being top justification. Default is 0.5, or center justification. Can also input 'top', 'bottom' or 'center', which will also make edits to \code{txt_v_align} to make the text completely top-justified, bottom-justified or centered, respectively.
}
Possible aesthetic elements for .png image files, or ggplot plots are :
\itemize{
\item \code{maintain_aspect_ratio} - A TRUE/FALSE value which indicates whether the aspect ratio of the image should be maintained. Default is FALSE - meaning the image will be stretched to fit the designated grid area.
\item \code{hjust} - A numeric value between 0 and 1 which determines the horizontal justification of the image within the designated grid area. A value of 0 indicates shifting the image all the way to the left, and a value of 1 indicates shifting the image all the way to the right. Default is 0.5.
\item \code{vjust} - A numeric value between 0 and 1 which determines the vertical justification of the image within the designated grid area. A value of 0 indicates shifting the image all the way to the bottom, and a value of 1 indicates shifting the image all the way to the top. Default is 0.5.
}}
}
\value{
A grob of x with aesthetics based on the aes_list param.
}
\description{
Takes in an object, and converts it to a grob based on inputted aesthetics arguments.
}
